Binary search is an efficient Algorithm for finding a specific value within a sorted array or list.

It works:
1) by repeatedly dividing the search interval in half and comparing the target value with the middle element.

Binary search is efficient with time complexity O(log n) making it much faster than a linear search for large datasets.

How Binary Search Works
    Start with two pointers, low and high, that mark the beginning and end of the array.
    Calculate the mid index: mid = (low + high) / 2.
    Compare the middle element with the target value:
        If the middle element matches the target, return the mid index.
        If the target is smaller than the middle element, set high = mid - 1 (search in the left half).
        If the target is larger than the middle element, set low = mid + 1 (search in the right half).
    Repeat steps 2-3 until the target is found or the search interval is empty (i.e., low > high).

